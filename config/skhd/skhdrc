# ################################################################ #
# THE FOLLOWING IS AN EXPLANATION OF THE GRAMMAR THAT SKHD PARSES. #
# FOR SIMPLE EXAMPLE MAPPINGS LOOK FURTHER DOWN THIS FILE..        #
# ################################################################ #

# A list of all built-in modifier and literal keywords can
# be found at https://github.com/koekeishiya/skhd/issues/1
#
# A hotkey is written according to the following rules:
#
#   hotkey       = <mode> '<' <action> | <action>
#
#   mode         = 'name of mode' | <mode> ',' <mode>
#
#   action       = <keysym> '[' <proc_map_lst> ']' | <keysym> '->' '[' <proc_map_lst> ']'
#                  <keysym> ':' <command>          | <keysym> '->' ':' <command>
#                  <keysym> ';' <mode>             | <keysym> '->' ';' <mode>
#
#   keysym       = <mod> '-' <key> | <key>
#
#   mod          = 'modifier keyword' | <mod> '+' <mod>
#
#   key          = <literal> | <keycode>
#
#   literal      = 'single letter or built-in keyword'
#
#   keycode      = 'apple keyboard kVK_<Key> values (0x3C)'
#
#   proc_map_lst = * <proc_map>
#
#   proc_map     = <string> ':' <command> | <string>     '~' |
#                  '*'      ':' <command> | '*'          '~'
#
#   string       = '"' 'sequence of characters' '"'
#
#   command      = command is executed through '$SHELL -c' and
#                  follows valid shell syntax. if the $SHELL environment
#                  variable is not set, it will default to '/bin/bash'.
#                  when bash is used, the ';' delimeter can be specified
#                  to chain commands.
#
#                  to allow a command to extend into multiple lines,
#                  prepend '\' at the end of the previous line.
#
#                  an EOL character signifies the end of the bind.
#
#   ->           = keypress is not consumed by skhd
#
#   *            = matches every application not specified in <proc_map_lst>
#
#   ~            = application is unbound and keypress is forwarded per usual, when specified in a <proc_map>
#
# A mode is declared according to the following rules:
#
#   mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |
#               '::' <name> '@'               | '::' <name>
#
#   name      = desired name for this mode,
#
#   @         = capture keypresses regardless of being bound to an action
#
#   command   = command is executed through '$SHELL -c' and
#               follows valid shell syntax. if the $SHELL environment
#               variable is not set, it will default to '/bin/bash'.
#               when bash is used, the ';' delimeter can be specified
#               to chain commands.
#
#               to allow a command to extend into multiple lines,
#               prepend '\' at the end of the previous line.
#
#               an EOL character signifies the end of the bind.

# ############################################################### #
# THE FOLLOWING SECTION CONTAIN SIMPLE MAPPINGS DEMONSTRATING HOW #
# TO INTERACT WITH THE YABAI WM. THESE ARE SUPPOSED TO BE USED AS #
# A REFERENCE ONLY, WHEN MAKING YOUR OWN CONFIGURATION..          #
# ############################################################### #

# open terminal, blazingly fast compared to iTerm/Hyper
hyper - return : /Applications/kitty.app/Contents/MacOS/kitty --single-instance -d ~

# Google Chrome
# hyper - w : "/Applications/Google Chrome.app/Contents/MacOS/Google Chrome" --profile-directory="Default"
# hyper - z : "/Applications/Google Chrome.app/Contents/MacOS/Google Chrome" --profile-directory="Profile 4"
# hyper - b : "/Applications/Google Chrome.app/Contents/MacOS/Google Chrome" --profile-directory="Profile 5"
# hyper - n : "/Applications/Google Chrome.app/Contents/MacOS/Google Chrome" --incognito

# Mozilla Firefox
hyper - w : "/Applications/Firefox.app/Contents/MacOS/firefox" --new-window 'ext+container:name=Personal&url=mail.google.com&pinned=true'
hyper - z : "/Applications/Firefox.app/Contents/MacOS/firefox" --new-window 'ext+container:name=Zomato&url=mail.google.com&pinned=true'
hyper - b : "/Applications/Firefox.app/Contents/MacOS/firefox" --new-window 'ext+container:name=Blinkit&url=mail.google.com&pinned=true'
hyper - n : "/Applications/Firefox.app/Contents/MacOS/firefox" --private-window

hyper - p : code

# focus spaces
lcmd - 1 : yabai -m space --focus 1 || yabai -m space --create && yabai -m space --focus 1
lcmd - 2 : yabai -m space --focus 2 || yabai -m space --create && yabai -m space --focus 2
lcmd - 3 : yabai -m space --focus 3 || yabai -m space --create && yabai -m space --focus 3
lcmd - 4 : yabai -m space --focus 4 || yabai -m space --create && yabai -m space --focus 4
lcmd - 5 : yabai -m space --focus 5 || yabai -m space --create && yabai -m space --focus 5
lcmd - 6 : yabai -m space --focus 6 || yabai -m space --create && yabai -m space --focus 6
lcmd - 7 : yabai -m space --focus 7 || yabai -m space --create && yabai -m space --focus 7
lcmd - 8 : yabai -m space --focus 8 || yabai -m space --create && yabai -m space --focus 8
lcmd - 9 : yabai -m space --focus 9 || yabai -m space --create && yabai -m space --focus 9
lcmd - 0 : yabai -m space --focus 10 || yabai -m space --create && yabai -m space --focus 10

# move windows to space
lalt - 1 : yabai -m window --space 1
lalt - 2 : yabai -m window --space 2
lalt - 3 : yabai -m window --space 3
lalt - 4 : yabai -m window --space 4
lalt - 5 : yabai -m window --space 5
lalt - 6 : yabai -m window --space 6
lalt - 7 : yabai -m window --space 7
lalt - 8 : yabai -m window --space 8
lalt - 9 : yabai -m window --space 9
lalt - 0 : yabai -m window --space 10

# move windows to space and focus the space
shift + lalt - 1 : yabai -m window --space 1; yabai -m space --focus 1
shift + lalt - 2 : yabai -m window --space 2; yabai -m space --focus 2
shift + lalt - 3 : yabai -m window --space 3; yabai -m space --focus 3
shift + lalt - 4 : yabai -m window --space 4; yabai -m space --focus 4
shift + lalt - 5 : yabai -m window --space 5; yabai -m space --focus 5
shift + lalt - 6 : yabai -m window --space 6; yabai -m space --focus 6
shift + lalt - 7 : yabai -m window --space 7; yabai -m space --focus 7
shift + lalt - 8 : yabai -m window --space 8; yabai -m space --focus 8
shift + lalt - 9 : yabai -m window --space 9; yabai -m space --focus 9
shift + lalt - 0 : yabai -m window --space 10; yabai -m space --focus 10

# focus recent space
lcmd - tab : yabai -m space --focus recent
lcmd + shift - tab : yabai -m window --focus recent

# focus window
lalt - h : yabai -m window --focus west
lalt - j : yabai -m window --focus south
lalt - k : yabai -m window --focus north
lalt - l : yabai -m window --focus east

# Iterate through stack
# lalt - [
lalt - 0x21 : yabai -m window --focus stack.prev || yabai -m window --focus stack.last
# lalt - ]
lalt - 0x1E : yabai -m window --focus stack.next || yabai -m window --focus stack.first

# swap window
lalt + shift - h : yabai -m window --swap west
lalt + shift - j : yabai -m window --swap south
lalt + shift - k : yabai -m window --swap north
lalt + shift - l : yabai -m window --swap east

# move managed window
meh - h : yabai -m window --stack west
meh - l : yabai -m window --stack east
meh - j : yabai -m window --stack south
meh - k : yabai -m window --stack north

# unstack + split
meh + cmd - h : yabai-stack west
meh + cmd - l : yabai-stack east
meh + cmd - j : yabai-stack south
meh + cmd - k : yabai-stack north

# warp window
lalt + cmd - h : yabai -m window --warp west
lalt + cmd - l : yabai -m window --warp east
lalt + cmd - j : yabai -m window --warp south
lalt + cmd - k : yabai -m window --warp north

# balance size of windows
# shift + lalt - =
shift + lalt - 0x18 : yabai -m space --balance

# rotate tree
lalt - r : yabai -m space --rotate 90
shift + lalt - r : yabai -m space --rotate 270

# Resize windows
lctrl + lalt - h : yabai -m window --resize left:-50:0; \
                  yabai -m window --resize right:-50:0
lctrl + lalt - j : yabai -m window --resize bottom:0:50; \
                  yabai -m window --resize top:0:50
lctrl + lalt - k : yabai -m window --resize top:0:-50; \
                  yabai -m window --resize bottom:0:-50
lctrl + lalt - l : yabai -m window --resize right:50:0; \
                  yabai -m window --resize left:50:0

# toggle fullscreen
# Make window native fullscreen
lalt - f         : yabai -m window --toggle zoom-fullscreen
shift + lalt - f : yabai -m window --toggle native-fullscreen
shift + lalt - space : yabai -m window --toggle float

lalt - t : yabai -m window --toggle split

lalt - b : yabai -m config layout bsp
lalt - s : yabai -m config layout stack
lalt - q : yabai -m window --close
lalt - o : yabai -m space --create; yabai -m space --focus last
lalt + shift - o : yabai -m space --create; yabai -m window --space last; yabai -m space --focus last
# lalt - ,
lalt - 0x2B : yabai -m space --focus prev
# lalt - .
lalt - 0x2F : yabai -m space --focus next
lalt + shift - 0x2B : yabai -m window --space prev; yabai -m space --focus prev
lalt + shift - 0x2F : yabai -m window --space next; yabai -m space --focus next

# create desktop, move window and follow focus - uses jq for parsing json (brew install jq)
# shift + lcmd - n : yabai -m space --create && \
#                   index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
#                   yabai -m window --space "${index}" && \
#                   yabai -m space --focus "${index}"

# send window to desktop and follow focus
# shift + lcmd - z : yabai -m window --space next; yabai -m space --focus next
# shift + lcmd - 2 : yabai -m window --space  2; yabai -m space --focus 2

# focus monitor
# ctrl + alt - z  : yabai -m display --focus prev
# ctrl + alt - 3  : yabai -m display --focus 3

# send window to monitor and follow focus
# ctrl + lcmd - c  : yabai -m window --display next; yabai -m display --focus next
# ctrl + lcmd - 1  : yabai -m window --display 1; yabai -m display --focus 1

# increase window size
# shift + alt - a : yabai -m window --resize left:-20:0
# shift + alt - w : yabai -m window --resize top:0:-20

# decrease window size
# shift + lcmd - s : yabai -m window --resize bottom:0:-20
# shift + lcmd - w : yabai -m window --resize top:0:20

